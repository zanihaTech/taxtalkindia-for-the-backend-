{"version":3,"sources":["server.js"],"names":["express","require","mongoose","cors","config","app","use","origin","methods","json","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","then","console","log","err","error","authRoutes","blogRoutes","PORT","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,IAAMC,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;;AACAK,GAAG,CAACC,GAAJ,CACEH,IAAI,CAAC;AACHI,EAAAA,MAAM,EAAE,uBADL;AAC+B;AAClCC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,CAFN,CAEyC;;AAFzC,CAAD,CADN;AAMAH,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACS,IAAR,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBN,OAAO,UAAP,CAAe,SAAf,CAApB,E,CAEA;;AACAE,QAAQ,CACLQ,OADH,CACWC,OAAO,CAACC,GAAR,CAAYC,SADvB,EACkC;AAC9BC,EAAAA,eAAe,EAAE,IADa;AAE9BC,EAAAA,kBAAkB,EAAE;AAFU,CADlC,EAKGC,IALH,CAKQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;AAAA,CALR,WAMS,UAACC,GAAD;AAAA,SAASF,OAAO,CAACG,KAAR,CAAc,2BAAd,EAA2CD,GAA3C,CAAT;AAAA,CANT,E,CAQA;;AACA,IAAME,UAAU,GAAGpB,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMqB,UAAU,GAAGrB,OAAO,CAAC,qBAAD,CAA1B;;AAEAI,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBe,UAArB,E,CAAkC;;AAClChB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBgB,UAAtB,E,CAAmC;AAEnC;;AACA,IAAMC,IAAI,GAAGZ,OAAO,CAACC,GAAR,CAAYW,IAAZ,IAAoB,IAAjC;AACAlB,GAAG,CAACmB,MAAJ,CAAWD,IAAX,EAAiB;AAAA,SAAMN,OAAO,CAACC,GAAR,kCAAsCK,IAAtC,EAAN;AAAA,CAAjB","sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nrequire('dotenv').config();\n\nconst app = express();\n\n// Middleware\napp.use(\n  cors({\n    origin: 'http://localhost:3000',  // Allow requests only from this origin\n    methods: ['GET', 'POST', 'PUT', 'DELETE'],  // Allow these HTTP methods\n  })\n);\napp.use(express.json());\napp.use('/uploads', express.static('uploads'));\n\n// MongoDB Connection\nmongoose\n  .connect(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(() => console.log('Connected to MongoDB'))\n  .catch((err) => console.error('MongoDB connection error:', err));\n\n// Routes\nconst authRoutes = require('./routes/authRoutes');\nconst blogRoutes = require('./routes/blogRoutes');\n\napp.use('/api/auth', authRoutes); // For authentication\napp.use('/api/posts', blogRoutes); // For blog posts\n\n// Start Server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n"],"file":"server.dev.js"}